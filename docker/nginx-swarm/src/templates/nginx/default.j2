server {
  listen      80 default_server;
  listen      [::]:80 default_server ipv6only=on;
  server_name {{ options['proxy_domain'] }};
  location / {
    return 301 https://{{ options['proxy_domain'] }}$request_uri;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  ssl_certificate         /etc/letsencrypt/live/{{ options['proxy_domain'] }}/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/{{ options['proxy_domain'] }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ options['proxy_domain'] }}/fullchain.pem;

  include /etc/nginx/snippets/ssl.conf;

  location /swarm/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header HOST $http_host;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://127.0.0.1:{{ options['proxy_port'] }}/;
    proxy_redirect off;
    auth_basic "Username and Password are required";
    auth_basic_user_file /etc/nginx/.htpasswd;
  }

  ## Generated config ##
  {% for service in services %}
  # {{ service['name'] }} container
  location /{{ service['endpoint'] }}/ {
    proxy_redirect off;
    proxy_set_header   X-Real-IP  $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto  $scheme;
    proxy_set_header   Host $host;
    proxy_set_header   X-NginX-Proxy  true;
    proxy_set_header   Connection "";
    proxy_http_version 1.1;
    proxy_cache one;
    proxy_cache_key sfs$request_uri$scheme;
    proxy_pass http://{{ service['name'] }}:{{ service['target_port'] }}/;
    auth_basic "Username and Password are required";
    auth_basic_user_file /etc/nginx/.htpasswd;
  }
  {% endfor %}
  ## End generated config ##

  # Nginx status.
  location /nginx_status {
    stub_status on;
    access_log off;
    allow 172.17.0.0/16;
    allow 172.18.0.0/16;
    deny all;
  }
}
